// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// gv_abcd2vis
ComplexVector gv_abcd2vis(NumericVector ii, NumericVector kx = NumericVector::create(4), NumericVector sx = NumericVector::create(4), NumericVector fx = NumericVector::create(1));
RcppExport SEXP gRavity_gv_abcd2vis(SEXP iiSEXP, SEXP kxSEXP, SEXP sxSEXP, SEXP fxSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type ii(iiSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type kx(kxSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type sx(sxSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type fx(fxSEXP );
        ComplexVector __result = gv_abcd2vis(ii, kx, sx, fx);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// gv_const
List gv_const();
RcppExport SEXP gRavity_gv_const() {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        List __result = gv_const();
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// gv_pd2gd
ComplexVector gv_pd2gd(ComplexVector pd);
RcppExport SEXP gRavity_gv_pd2gd(SEXP pdSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< ComplexVector >::type pd(pdSEXP );
        ComplexVector __result = gv_pd2gd(pd);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// gv_readfits
NumericVector gv_readfits(CharacterVector fits_name, CharacterVector hdu_name = "", CharacterVector col_name = "");
RcppExport SEXP gRavity_gv_readfits(SEXP fits_nameSEXP, SEXP hdu_nameSEXP, SEXP col_nameSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type fits_name(fits_nameSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type hdu_name(hdu_nameSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type col_name(col_nameSEXP );
        NumericVector __result = gv_readfits(fits_name, hdu_name, col_name);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// gv_sci_img2pix
NumericVector gv_sci_img2pix(NumericMatrix img, NumericVector idx, IntegerVector cnr, IntegerVector dim, IntegerVector n_wd = 3);
RcppExport SEXP gRavity_gv_sci_img2pix(SEXP imgSEXP, SEXP idxSEXP, SEXP cnrSEXP, SEXP dimSEXP, SEXP n_wdSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type img(imgSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type idx(idxSEXP );
        Rcpp::traits::input_parameter< IntegerVector >::type cnr(cnrSEXP );
        Rcpp::traits::input_parameter< IntegerVector >::type dim(dimSEXP );
        Rcpp::traits::input_parameter< IntegerVector >::type n_wd(n_wdSEXP );
        NumericVector __result = gv_sci_img2pix(img, idx, cnr, dim, n_wd);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// gv_sci_pix2vis_unsorted
ComplexMatrix gv_sci_pix2vis_unsorted(NumericMatrix flux, NumericMatrix dark, List p2vm);
RcppExport SEXP gRavity_gv_sci_pix2vis_unsorted(SEXP fluxSEXP, SEXP darkSEXP, SEXP p2vmSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type flux(fluxSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type dark(darkSEXP );
        Rcpp::traits::input_parameter< List >::type p2vm(p2vmSEXP );
        ComplexMatrix __result = gv_sci_pix2vis_unsorted(flux, dark, p2vm);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP gRavity_rcpp_hello_world() {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        List __result = rcpp_hello_world();
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// timesTwo
NumericVector timesTwo();
RcppExport SEXP gRavity_timesTwo() {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        NumericVector __result = timesTwo();
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
